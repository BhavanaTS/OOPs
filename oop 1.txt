'''
Write a Python program to implement the class chosen with its attributes and methods.


Note:

Consider all instance variables to be private and methods to be public
An instructor may have multiple technology skills, so consider instance variable, technology_skill to be a list
Include getter and setter methods for all instance variables
check_eligibility(): Return true if eligibility criteria is satisfied by the instructor. Else, return false
allocate_course(technology): Return true if the course which requires the given technology can be allocated to the instructor. Else, return false
Perform case sensitive string comparison
Represent few objects of the class, initialize instance variables using setter methods, invoke appropriate methods and test your program.

'''
#OOP-Assgn-5

class Instructor:
    def __init__(self):
        self.__technology_skill=[]
        self.__instructor_name=None
        self.__experience=None
        self.__avg_feedback=None
    
    def set_instructor_name(self,instructor_name):
        self.__instructor_name=instructor_name
        
    
    def set_experience(self, experience):
        self.__experience=experience
        
    
    def set_avg_feedback(self,avg_feedback):
        self.__avg_feedback=avg_feedback
        
    
    def set_technology_skill(self,technology_skill):
        self.__technology_skill=technology_skill
        
    def get_instructor_name(self):
        return self.__instructor_name
        
    def get_experience(self):
        return self.__experience
        
    def get_avg_feedback(self):
        return self.__avg_feedback
        
    def get_technology_skill(self):
        return self.__technology_skill
        
    def check_eligibility(self):
        if self.__experience>3 and self.__avg_feedback>=4.5:
            return True
        elif self.__experience<=3 and self.__avg_feedback>=4:
            return True
        else:
            return False
        
    def allocate_course(self,technology):
        self.flag=0
        if self.check_eligibility():
           
            for i in self.__technology_skill:
                if technology==i:
                    self.flag=1
                   
                else:
                    continue
            if self.flag==1:
                return True
            else:
                return False
        else:
            return False
        
                
                
i1=Instructor()
i1.set_instructor_name("bhavana")
i1.set_experience(3)
i1.set_technology_skill(["Java","Python"])
i1.set_avg_feedback(4.0)

print("Name: ",i1.get_instructor_name())
print("Experience: ",i1.get_experience())
print("Skills: ",i1.get_technology_skill())
print("Feedback: ",i1.get_avg_feedback())

print(i1.allocate_course("PYTHON"))   
# if i1.allocate_course("x"):
#     print("allocated")
# else:
#     print("not allocated")